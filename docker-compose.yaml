services:

  backend:
      image: ekoi-api
      container_name: ekoi-backend
      command: ["uvicorn", "src.fastapi_backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
      volumes:
        - .:/src
      ports:
        - "8000:8000"
      env_file:
        - .env.dev
      depends_on:
        - postgres
        - redis
      environment:
        - PYTHONPATH=/src
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
        interval: 30s
        timeout: 3s
        retries: 3
      networks:
        - ekoi-bridge

  postgres:
    image: postgres:15
    container_name: ekoi-postgres
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ekoidev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ror2025}
      POSTGRES_DB: ${POSTGRES_DB:-ekoidb}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ekoi-bridge

  redis:
    image: redis/redis-stack:latest
    container_name: ekoi-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 3
    networks:
      - ekoi-bridge

volumes:
  postgres_data:

networks:
    ekoi-bridge:
      driver: bridge